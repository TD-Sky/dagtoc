#compdef dagtoc

autoload -U is-at-least

_dagtoc() {
    typeset -A opt_args
    typeset -a _arguments_options
    local ret=1

    if is-at-least 5.2; then
        _arguments_options=(-s -S -C)
    else
        _arguments_options=(-s -C)
    fi

    local context curcontext="$curcontext" state line
    _arguments "${_arguments_options[@]}" \
'-a+[Add contents via KDL]:TOC:_files' \
'--add=[Add contents via KDL]:TOC:_files' \
'-x+[±count to pages of input/output TOC]:COUNT: ' \
'--offset=[±count to pages of input/output TOC]:COUNT: ' \
'-o+[Output PDF path]:OUTPUT:_files' \
'--output=[Output PDF path]:OUTPUT:_files' \
'-d[Delete contents]' \
'--delete[Delete contents]' \
'-g[Get contents]' \
'--get[Get contents]' \
'-c[Check whether the contents is valid (all outlines numbered and pages are monotone increasing)]' \
'--check[Check whether the contents is valid (all outlines numbered and pages are monotone increasing)]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
':pdf -- Input PDF path:_files' \
&& ret=0
}

(( $+functions[_dagtoc_commands] )) ||
_dagtoc_commands() {
    local commands; commands=()
    _describe -t commands 'dagtoc commands' commands "$@"
}

if [ "$funcstack[1]" = "_dagtoc" ]; then
    _dagtoc "$@"
else
    compdef _dagtoc dagtoc
fi
